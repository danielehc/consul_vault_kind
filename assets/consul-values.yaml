global:
  datacenter: "dc1"
  name: consul
  domain: consul
  image: hashicorp/consul-enterprise:1.12-ent
  secretsBackend:
    vault:
      enabled: true
      consulServerRole: consul-server
      consulClientRole: consul-client
      consulCARole: consul-ca
      connectCA:
        address: http://vault.vault:8200
        rootPKIPath: connect-root/
        intermediatePKIPath: connect-intermediate-dc1/
  enterpriseLicense:
    secretName: 'consul/data/secret/enterpriselicense'
    secretKey: 'key'
  # adminPartitions:
  #   enabled: true
  #   service:
  #     type: ClusterIP
  tls:
    enabled: true
    enableAutoEncrypt: true
    caCert:
      secretName: "pki/cert/ca"
    #httpsOnly: false
  federation:
    enabled: false
    createFederationSecret: false
  acls:
    manageSystemACLs: false
    #createReplicationToken: true
  gossipEncryption:
    #autoGenerate: true
    # secretName: consul/data/secret/gossip
    secretName: "consul/data/secret/gossip"
    secretKey: gossip
  enableConsulNamespaces: true
  # metrics:
  #   enabled: true
  #   enableAgentMetrics: true
  #   enableGatewayMetrics: true
server:
  replicas: 1
  exposeGossipAndRPCPorts: true
  serverCert:
    secretName: "pki/issue/consul-server"
connectInject:
  replicas: 1
  enabled: true
  transparentProxy:
    defaultEnabled: true
  # envoyExtraArgs: "--log-level debug"
  consulNamespaces:
    consulDestinationNamespace: "ns1"
    mirroringK8S: true
  # metrics:
  #   defaultEnableMerging: true
  #   defaultPrometheusScrapePort: 20200
  #   defaultPrometheusScrapePath: "/metrics"
prometheus:
  enabled: true
controller:
  enabled: true

#not supported with the current vault backend
meshGateway:
  enabled: false
  replicas: 1
ingressGateways:
  replicas: 1
  enabled: true
  gateways:
    - name: ingress-gateway
      service:
        type: ClusterIP
terminatingGateways:
  replicas: 1
  enabled: true
  gateways:
    - name: terminating-gateway
      service:
        type: ClusterIP
ui:
  enabled: true
  service:
    type: ClusterIP
  metrics:
    provider: prometheus
    baseURL: http://prometheus-server

syncCatalog:
  enabled: true
  consulNamespaces:
    mirroringK8S: true
  k8sDenyNamespaces: ["kube-system", "kube-public", "consul", "kubernetes-dashboard"]
